<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter SYSTEM "../../xsl/webtemplate.dtd" [ 
    <!ENTITY % myents SYSTEM "webtemplate.ent">
   %myents;
]>

<chapter id="continuous_integration">
	<title>Jenkins Continuous Integration</title>
	<section id="install-jenkins">
	  	<title>Install and Configure Jenkins Continuous Integration Server for PHP</title>
		<para>
		This chapter explains how to install and configure the Continuous Integration Toolset jenkins for <olink targetptr="gloss-php" targetdoc="develop" role="glossterm">PHP</olink> applications.  
		The instruction refer to Webtemplate. Once you are bulding your own application replace Webtemplate with the name of your application.
		</para>
		<note>
			<para>
			It is recommended that you also install the tools listed below, with the exception of Jenkins, to your own development machine to allow you to run test
			builds prior to uploading your changes to your Software Version Contol System.
			</para>
		</note>
		<section id="java">
			<title>JAVA</title>
			<para>
			In order to use both <olink targetptr="jenkins" targetdoc="develop" role="glossterm">JENKINS</olink> and <olink targetptr="ant" targetdoc="develop" role="glossterm">ANT</olink> you need to have a JDK and 
			JRE installed. The suggested versions are openjdk-7-jre and openjdk-7-jdk. As of 2011-08 gcj is known to be problematic - see 
			<ulink url="https://issues.jenkins-ci.org/browse/JENKINS-743" />.
			</para>
		</section>
		<section id="ant">
			<title>Apache Ant</title>
			<para>
			Apache Ant is a Java library and command-line tool whose mission is to drive processes described in build files as targets and extension points 
			dependent upon each other. The main known usage of Ant is the build of Java applications. Ant supplies a number of built-in tasks allowing to 
			compile, assemble, test and run Java applications. Ant can also be used effectively to build non Java applications, for instance C or C++ applications. 
			More generally, Ant can be used to pilot any type of process which can be described in terms of targets and tasks. 
			</para>
			<para>
			Apache Ant can be found at <ulink url="http://ant.apache.org/" />.  However it is recomended that you install Ant using your systems package manger to ensure
			all the required dependancies are also installed.
			</para>
		</section>
		<section id="jenkins">
			<title>Jenkins</title>
			<para>
			Jenkins is both a continuous integration tool and an extensible framework for creating a custom 
			continuous build process.  It includes dozens of plugins for a variety of source controls, build technologies, 
			and notifications schemes including email and instant messaging.  A web interface provides access to configure
			Jenkins, including seeting up new projects, as well as details of the current and previous builds.  
			</para>
			<para>
			Jenkins can be found at the following site <ulink url="http://jenkins-ci.org/" />.  Links to packages for Windows and the more 
			popular Linux distributions are provided.   
			</para>
			<para>
			The simplist way of installing Jenkins is to follow the instructions for your Operating System on the Jenkins website.  The instructions 
			for installing and using Jenkins can be found at <ulink url="https://wiki.jenkins-ci.org/display/JENKINS/Use+Jenkins" />
			</para>
			<para>
			Jenkins requires a number of plugins for processing and publishing the output of the Jenkins Build process.  They are:
			<itemizedlist mark="bullet">
				<listitem>
					<para>
					Checkstyle: for processing PHP_Codesniffer logfiles in checkstyle format.
					</para>
				</listitem>
				<listitem>
					<para>
					Clover PHP: for processing PHPUnit's Clover XML logfile.
					</para>
				</listitem>
				<listitem>
					<para>
					Crap4j: for processing PHPUnit's Crap4j XML logfile.
					</para>
				</listitem>
				<listitem>
					<para>
					DRY: for processing phpcpd logfiles in PMD-CPD format.
					</para>
				</listitem>
				<listitem>
					<para>
					HTML Publisher: for publishing documentation generated by phpDox
					</para>
				</listitem>
				<listitem>
					<para>
					JDepend: for processing PHP_Depend logfiles in JDepend format.
					</para>
				</listitem>
				<listitem>
					<para>
					Plt: for processing phploc CSV output.
					</para>
				</listitem>
				<listitem>
					<para>
					PMD: for processing PHDMD logfiles in PMD format.
					</para>
				</listitem>
				<listitem>
					<para>
					Violations: for processing various logfiles.
					</para>
				</listitem>
				<listitem>
					<para>
					xUnit: for processing PHPUnit's jUnit's XML Logfiles.
					</para>
				</listitem>
				<listitem>
					<para>
					config-file-provider: to create the database configuration file needed for phpunit.
					</para>
				</listitem>
				<listitem>
					<para>
					throttle-concurrents-builds: To control the number of builds running at one time..
					</para>
				</listitem>
				</itemizedlist>
			</para>
			<para>
			You can install these plugins using the web frontend at <programlisting>http://localhost:8080/pluginManger/available</programlisting>
			</para>
			<para>
			You can also install them using the Jenkins CLI:
			</para>
			<para>
				<programlisting>wget http://localhost:8080/jnlpJars/jenkins-cli.jar</programlisting>
			</para>
			<para>
				<programlisting>java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin checkstyle cloverphp crap4j dry htmlpublisher jdepend plot pmd violations xunit config-file-provider</programlisting>
			</para>
			<para>
				<programlisting>java -jar jenkins-cli.jar -s http://localhost:8080 safe-restart</programlisting>
			</para>
			<para>
			If you see an error message such as "checkstyle is neither a valid file, URL, nor a plugin artifact name in the 
			update center No update center data is retrieved yet", you need to update your plugin list manually:
			</para>
			<para>
				<programlisting>curl -L http://updates.jenkins-ci.org/update-center.json | sed '1d;$d' | curl -X POST -H 'Accept: application/json' -d @- http://localhost:8080/updateCenter/byId/default/postBack</programlisting>
			</para>
		</section>
		<section id="install-phptools">
			<title>Install  PHP Tools</title>
			<para>
			The following PHP tools are required for Jenkins.  They are automatically installed using Composer
			<itemizedlist mark="bullet">
				<listitem>
					<para>
					PHPUnit: <ulink url="http://phpunit.de/" />
					</para>
				</listitem>
				<listitem>
					<para>
					PHP_CodeSniffer: <ulink url="http://pear.php.net/package/PHP_CodeSniffer/" />
					</para>
				</listitem>
				<listitem>
					<para>
					PHPLOC: <ulink url="https://github.com/sebastianbergmann/phploc" />
					</para>
				</listitem>
				<listitem>
					<para>
					PHP_Depend: <ulink url="http://pdepend.org/" />
					</para>
				</listitem>
				<listitem>
					<para>
					PHPMD: <ulink url="http://phpmd.org/" />
					</para>
				</listitem>
				<listitem>
					<para>
					PHPCPD: <ulink url="https://github.com/sebastianbergmann/phpcpd" />
					</para>
				</listitem>
				<listitem>
					<para>
					phpdox: <ulink url="http://phpdox.de/" />
					</para>
				</listitem>
				</itemizedlist>
			</para>
			<para>
			It is assumed that these tools are in <filename class="directory">vendor/bin</filename> and are invoked using <command>ant</command>.
			</para>
		</section>
		<section id="vfsstream">
			<title>Virtual File System</title>
			<para>
			&progname; uses vfsStream to test the FileManager Class used during the install process.  vfsStream is installed using  
			<olink targetptr="gloss-composer" targetdoc="develop" role="glossterm">Composer</olink>.  Instruction on how to use the 
			vitual file system can be found at <ulink url="http://vfs.bovigo.org/" />.
			</para>
		</section>
		<section id="jenkins-php-template">
			<title>Jenkins PHP Template</title>
			<para>
			Sebastian Bergmann has created a Jenkins Project Template for  <olink targetptr="gloss-php" targetdoc="develop" role="glossterm">PHP</olink>.  The template and instructions for using 
			it can be found at <ulink url="http://jenkins-php.org/ "/>.  These instruction include the information provided at <olink targetptr="jenkins" targetdoc="develop" /> 
			and <olink targetptr="install-phptools" targetdoc="develop" />
			</para>
		</section>
	</section>		
	<section id="conf-jenkins">
	  	<title>Configuring Jenkins </title>
	  	<para>
	  	Jenkins should be configured to run &progname; using the instruction found at <ulink url="http://jenkins-php.org/ "/>. a number of the files mentioned in these 
	  	instructions can be found in the &progname;  GIT archive and therefore do not need to be created.  They are:
	  	<itemizedlist mark="bullet">
			<listitem>
				<para>
					build.xml: The Main build file used by ANT.
				</para>
			</listitem>
			<listitem>
				<para>
					build/phpcs.xml: Configuration file for PHP Coade Sniffer.
				</para>
			</listitem>
			<listitem>
				<para>
					build/phpdox.xml: Configuration file for PHP Documentation Generator.
				</para>
			</listitem>
			<listitem>
				<para>
					build/phpunit.xml: Configuration file for PHP Unit.
				</para>
			</listitem>
		</itemizedlist>
	  	</para>
	  	<para>
	  	Once the instruction from <ulink url="http://jenkins-php.org/ "/> have been completed it is possible to run Webtemplate on Jenkings, however the build will fail as 
	  	<filename>config.php</filename> is missing.  This can be created wither manually after the failed build or automatically by Jenkins using the config-file-plugin.
	  	The configuration file is created using the <command>Managed Files</command> on the Manage Jenkins Page.  Create a new Custom File and copy the contents 
	  	of the <filename>config.php.dist</filename> into it.  The instructions for creating <filename>config.php</filename> which contains an explanation for each line can be 
	  	found <olink targetptr="config-webtemplate" targetdoc="develop" />.
	  	</para>
	  	<para>
	  	Return to the Webtemplate configuration page and in the Build Environment section and follow the steps below:
	  	</para>
	  	<procedure>
	  		<step>
	  			<para>
	  			Select the Provide Configuration Files checkbox.
	  			</para>
	  		</step>
	  		<step>
	  			<para>
	  			Select the Confiuration from the dropdown lists using the name to used when you created it.
	  			</para>
	  		</step>
	  		<step>
	  			<para>
	  			Complete the Target edit box with <filename>config.php</filename>.
	  			</para>
	  		</step>
	  	</procedure>
	  	
	  	<para>
	  	Enable the build and Webtemplate should build.
	  	</para>
	</section>
</chapter>
